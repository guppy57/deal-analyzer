// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Loan {
  id                     String   @id @default(cuid())
  name                   String
  provider               String
  downPaymentPercent     Int
  yearsLength            Int      @default(30)
  interestRate           Int
  hasMIP                 Boolean
  mipAnnualRate          Int
  mipUpfrontRate         Int
  downPaymentGrantAmount Int
  deals                  Deal[]
  createdAt              DateTime @default(now())
  updateAt               DateTime @updatedAt
}

model Property {
  id                String           @id @default(cuid())
  address           String
  city              String
  state             String
  zip               String
  homeType          String
  units             Int
  beds              Int
  baths             Int
  squareFeet        Int
  lotSizeSquareFeet Int
  listPrice         Int
  yearBuilt         Int
  deals             Deal[]
  rentEstimates     RentComparable[]
  createdAt         DateTime         @default(now())
  updateAt          DateTime         @updatedAt
}

model RentComparable {
  id              String   @id @default(cuid())
  beds            Int
  baths           Int
  squareFeet      Int
  rentLow         Int
  rentHigh        Int
  isOwnerOccupied Boolean
  isStudio        Boolean
  notes           String
  deals           Deal[]
  createdAt       DateTime @default(now())
  updateAt        DateTime @updatedAt
  property        Property @relation(fields: [propertyId], references: [id])
  propertyId      String
}

model Scenario {
  id                String   @id @default(cuid())
  name              String
  propertyTaxRate   Int
  vanacyRate        Int
  repairSavingsRate Int
  closingCostsRate  Int
  appreciationRate  Int
  deals             Deal[]
  createdAt         DateTime @default(now())
  updateAt          DateTime @updatedAt
}

model Deal {
  id               String          @id @default(cuid())
  scenarioId       String
  loanId           String
  propertyId       String
  scenario         Scenario        @relation(fields: [scenarioId], references: [id])
  loan             Loan            @relation(fields: [loanId], references: [id])
  property         Property        @relation(fields: [propertyId], references: [id])
  createdAt        DateTime        @default(now())
  updateAt         DateTime        @updatedAt
  RentComparable   RentComparable? @relation(fields: [rentComparableId], references: [id])
  rentComparableId String?
}
